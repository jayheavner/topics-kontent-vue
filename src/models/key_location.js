import {
  ContentItem,
  ElementModels,
  Elements
} from '@kentico/kontent-delivery';

/**
 * Generated by '@kentico/kontent-model-generator@3.1.0'
 * Timestamp: Tue Feb 04 2020 13:38:01 GMT-0500 (Eastern Standard Time)
 */
export class KeyLocation extends ContentItem {
  constructor() {
    super({
      propertyResolver: elementName => {
        if (elementName === 'location_link') {
          return 'locationLink';
        }
        if (elementName === 'key_location_items') {
          return 'locations';
        }
        return elementName;
      }
    });
  }
}

export class KeyLocationDistance extends ContentItem {
  constructor() {
    super({
      propertyResolver: elementName => {
        return elementName;
      }
    });
  }
}

export function flatten(item) {
  if (!item) return null;

  return {
    title: item.title.value,
    description: item.description.value,
    location: item.location.value,
    locationLink: item.locationLink.value,
    locations: flattenLocationDistances(item.locations.value)
  };
}

function flattenLocationDistances(item) {
  let locations = [];
  for (const location of item) {
    locations.push({ title: location.title.value, miles: location.miles.value});
  }
  return locations;
}
