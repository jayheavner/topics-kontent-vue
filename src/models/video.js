import {
  ContentItem,
  Elements
} from '@kentico/kontent-delivery';

/**
 * Generated by '@kentico/kontent-model-generator@3.1.0'
 * Timestamp: Tue Feb 04 2020 13:38:01 GMT-0500 (Eastern Standard Time)
 */
export class Video extends ContentItem {
  constructor() {
    super({
      itemResolver: rawElement => {
        debugger;
      },
      linkedItemResolver: rawElement => {
        debugger;
      },
      propertyResolver: elementName => {
        if (elementName === 'video_html') {
          return 'videoHtml';
        }
        if (elementName === 'topics_image') {
          return 'topicsImage';
        }
        return elementName;
      }
    });
  }
}

export function flatten(item) {
  if (!item) return null;
  debugger;
  try {
    return {
      title: item.title.value,
      summary: item.summary.value,
      videoHtml: item.videoHtml.value,
      date: item.date.value,
      speakers: flattenSpeakers(item.speakers.value),
      url: item.url.value
    };
  } catch (ex) {
    console.log(`video model > ${ex}`);
  }
}

function flattenSpeakers(item) {
  let speakers = [];
  for (const speaker of item) {
    speakers.push({
      name: speaker.name.value,
      headshot: speaker.headshot.value,
      title: speaker.title.value,
      bio: speaker.bio.value
    });
  }
  return speakers;
}